# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import instance_pb2 as instance__pb2


class InstanceServiceStub(object):
    """python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./instance.proto

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateInstance = channel.unary_unary(
                '/proto.InstanceService/CreateInstance',
                request_serializer=instance__pb2.CreateInstanceRequest.SerializeToString,
                response_deserializer=instance__pb2.CreateInstanceResponse.FromString,
                )
        self.GetInstanceInfo = channel.unary_unary(
                '/proto.InstanceService/GetInstanceInfo',
                request_serializer=instance__pb2.InstanceInfoRequest.SerializeToString,
                response_deserializer=instance__pb2.InstanceInfoResponse.FromString,
                )
        self.StartOrStopInstance = channel.unary_unary(
                '/proto.InstanceService/StartOrStopInstance',
                request_serializer=instance__pb2.InstanceInfoRequest.SerializeToString,
                response_deserializer=instance__pb2.InstanceInfoResponse.FromString,
                )


class InstanceServiceServicer(object):
    """python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./instance.proto

    """

    def CreateInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstanceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartOrStopInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstance,
                    request_deserializer=instance__pb2.CreateInstanceRequest.FromString,
                    response_serializer=instance__pb2.CreateInstanceResponse.SerializeToString,
            ),
            'GetInstanceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstanceInfo,
                    request_deserializer=instance__pb2.InstanceInfoRequest.FromString,
                    response_serializer=instance__pb2.InstanceInfoResponse.SerializeToString,
            ),
            'StartOrStopInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.StartOrStopInstance,
                    request_deserializer=instance__pb2.InstanceInfoRequest.FromString,
                    response_serializer=instance__pb2.InstanceInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.InstanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstanceService(object):
    """python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. ./instance.proto

    """

    @staticmethod
    def CreateInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.InstanceService/CreateInstance',
            instance__pb2.CreateInstanceRequest.SerializeToString,
            instance__pb2.CreateInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstanceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.InstanceService/GetInstanceInfo',
            instance__pb2.InstanceInfoRequest.SerializeToString,
            instance__pb2.InstanceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartOrStopInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.InstanceService/StartOrStopInstance',
            instance__pb2.InstanceInfoRequest.SerializeToString,
            instance__pb2.InstanceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
